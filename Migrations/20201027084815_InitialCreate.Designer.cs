// <auto-generated />
using System;
using DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace project.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20201027084815_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.AnalysisLogModel", b =>
                {
                    b.Property<string>("A_ID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image_Location")
                        .HasColumnType("varChar(Max)");

                    b.Property<string>("Image_Name")
                        .HasColumnType("nvarChar(30)");

                    b.Property<string>("M_ID")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("A_ID");

                    b.HasIndex("M_ID");

                    b.ToTable("AnalysisLog");

                    b.HasData(
                        new
                        {
                            A_ID = "9e80196d-072a-4f08-87cd-1c37ccdbc814",
                            Image_Location = "https://i.imgur.com/UL8Jk6A.png",
                            Image_Name = "分析紀錄_2020/10/27 下午 04:48:15",
                            M_ID = "9dc1dfd0-041c-4f7c-9e9d-efe7afb5ecfd",
                            UpdateTime = new DateTime(2020, 10, 27, 16, 48, 15, 565, DateTimeKind.Local).AddTicks(5338)
                        });
                });

            modelBuilder.Entity("Models.AnalysisStatusModel", b =>
                {
                    b.Property<string>("AS_ID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("A_ID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("S_ID")
                        .HasColumnType("varchar(50)");

                    b.HasKey("AS_ID");

                    b.HasIndex("A_ID");

                    b.HasIndex("S_ID");

                    b.ToTable("AnalysisStatus");

                    b.HasData(
                        new
                        {
                            AS_ID = "4ccb10d5-8ee9-4110-8423-6be0856a44ed",
                            A_ID = "9e80196d-072a-4f08-87cd-1c37ccdbc814",
                            S_ID = "84d90208-6244-4b83-a714-1baebf96eaa5"
                        });
                });

            modelBuilder.Entity("Models.MemberModel", b =>
                {
                    b.Property<string>("M_ID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Account")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("AuthCode")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.Property<string>("Sex")
                        .HasColumnType("varchar(2)");

                    b.HasKey("M_ID");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            M_ID = "9dc1dfd0-041c-4f7c-9e9d-efe7afb5ecfd",
                            Account = "admin001",
                            AuthCode = "",
                            BirthDate = new DateTime(2020, 10, 27, 16, 48, 15, 553, DateTimeKind.Local).AddTicks(2470),
                            CreateTime = new DateTime(2020, 10, 27, 16, 48, 15, 555, DateTimeKind.Local).AddTicks(9312),
                            Email = "ok96305@gmail.com",
                            Name = "陳建成",
                            Password = "12345",
                            Role = true,
                            Sex = "男"
                        });
                });

            modelBuilder.Entity("Models.StatusModel", b =>
                {
                    b.Property<string>("S_ID")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarChar(40)");

                    b.HasKey("S_ID");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            S_ID = "84d90208-6244-4b83-a714-1baebf96eaa5",
                            StatusMessage = "坐姿過於前傾",
                            StatusName = "坐姿警示"
                        });
                });

            modelBuilder.Entity("Models.AnalysisLogModel", b =>
                {
                    b.HasOne("Models.MemberModel", "TheMember")
                        .WithMany("AnalysisLog")
                        .HasForeignKey("M_ID");
                });

            modelBuilder.Entity("Models.AnalysisStatusModel", b =>
                {
                    b.HasOne("Models.AnalysisLogModel", "TheAnalysisLog")
                        .WithMany("AnalysisStatus")
                        .HasForeignKey("A_ID");

                    b.HasOne("Models.StatusModel", "TheStatus")
                        .WithMany("AnalysisStatus")
                        .HasForeignKey("S_ID");
                });
#pragma warning restore 612, 618
        }
    }
}
